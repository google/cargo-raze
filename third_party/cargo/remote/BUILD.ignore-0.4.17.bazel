"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

# buildifier: disable=load
load(
    "@rules_rust//rust:rust.bzl",
    "rust_binary",
    "rust_library",
    "rust_test",
)

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//third_party/cargo", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "unencumbered",  # Unlicense from expression "Unlicense OR MIT"
])

# Generated Targets

# Unsupported target "walk" with type "example" omitted

rust_library(
    name = "ignore",
    srcs = glob(["**/*.rs"]),
    aliases = {
    },
    crate_features = [
    ],
    crate_root = "src/lib.rs",
    crate_type = "lib",
    data = [],
    edition = "2015",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "manual",
    ],
    version = "0.4.17",
    # buildifier: leave-alone
    deps = [
        "@cargo_raze__crossbeam_utils__0_8_1//:crossbeam_utils",
        "@cargo_raze__globset__0_4_6//:globset",
        "@cargo_raze__lazy_static__1_4_0//:lazy_static",
        "@cargo_raze__log__0_4_13//:log",
        "@cargo_raze__memchr__2_3_4//:memchr",
        "@cargo_raze__regex__1_4_3//:regex",
        "@cargo_raze__same_file__1_0_6//:same_file",
        "@cargo_raze__thread_local__1_1_1//:thread_local",
        "@cargo_raze__walkdir__2_3_1//:walkdir",
    ] + selects.with_or({
        # cfg(windows)
        (
            "@rules_rust//rust/platform:i686-pc-windows-msvc",
            "@rules_rust//rust/platform:x86_64-pc-windows-msvc",
        ): [
            "@cargo_raze__winapi_util__0_1_5//:winapi_util",
        ],
        "//conditions:default": [],
    }),
)

# Unsupported target "gitignore_matched_path_or_any_parents_tests" with type "test" omitted
